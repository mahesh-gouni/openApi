openapi: 3.0.1
info:
  title: OpenAPI Definition
  version: v0
tags:
  - name: customer
    description: Customer Controller
  - name: account
    description: Account Controller

servers:
  - url: http://localhost:8080
    description: Generated server URL

paths:
  /api/customer/newUser:
    post:
      tags:
        - customer
      operationId: newUser
      description: Customer object that needs to be added
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /api/account/{accountNumber}:
    get:
        tags:
            - account
        summary: Get account details by account number
        description: Get account details by account number
        operationId: getAccountByAccountNumber
        parameters:
            - name: accountNumber
              in: path
              description: Account number to get account details
              required: true
              schema:
                    type: string
        responses:
            '200':
                description: Account details fetched successfully
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Customer'
            '404':
                description: Account not found
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: Account not found

  /api/account:
    get:
      summary: Get a list of accounts
      description: Retrieves a list of items based on the query parameters provided.
      parameters:
        - name: limit
          in: query
          description: The maximum number of accounts to return
          required: false
          schema:
            type: integer
            example: 10
        - name: offset
          in: query
          description: The number of accounts to skip before starting to collect the result set
          required: false
          schema:
            type: integer
            example: 20
        - name: filter
          in: query
          description: Filter condition to narrow down the results
          required: false
          schema:
            type: string
            example: "category:Customer"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    category:
                      type: string






components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string

    Nominee:
      type: object
      properties:
        name:
          type: string
        address:
          $ref: "#/components/schemas/Address"

    Customer:
      type: object
      properties:
        accountNumber:
          type: string
        name:
          type: string
        pan:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        nominee:
          $ref: "#/components/schemas/Nominee"
